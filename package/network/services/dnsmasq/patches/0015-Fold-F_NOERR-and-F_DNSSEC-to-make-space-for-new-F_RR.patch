From 88fc6c80236e946c7b719a8ef0bd0b08bdbc3295 Mon Sep 17 00:00:00 2001
From: Simon Kelley <simon@thekelleys.org.uk>
Date: Mon, 20 Mar 2023 23:11:38 +0000
Subject: [PATCH 15/44] Fold F_NOERR and F_DNSSEC to make space for new F_RR.

---
 src/cache.c   | 2 +-
 src/dnsmasq.h | 7 ++++++-
 src/forward.c | 6 +++---
 3 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/src/cache.c b/src/cache.c
index 0a5fd14..6ae6688 100644
--- a/src/cache.c
+++ b/src/cache.c
@@ -2129,7 +2129,7 @@ void log_query(unsigned int flags, char *name, union all_addr *addr, char *arg,
     }
   else if (flags & F_AUTH)
     source = "auth";
-   else if (flags & F_DNSSEC)
+   else if (flags & F_NOERR)
     {
       source = arg;
       verb = "to";
diff --git a/src/dnsmasq.h b/src/dnsmasq.h
index 292a402..7d26460 100644
--- a/src/dnsmasq.h
+++ b/src/dnsmasq.h
@@ -334,6 +334,11 @@ union all_addr {
     unsigned short keytag, algo, digest, rcode;
     int ede;
   } log;
+  /* for arbitrary RR record. */
+  struct {
+    struct blockdata *rrdata;
+    u16 rrtype;
+  } rr;
 };
 
 
@@ -504,7 +509,7 @@ struct crec {
 #define F_QUERY     (1u<<19)
 #define F_NOERR     (1u<<20)
 #define F_AUTH      (1u<<21)
-#define F_DNSSEC    (1u<<22)
+#define F_RR        (1u<<22)
 #define F_KEYTAG    (1u<<23)
 #define F_SECSTAT   (1u<<24)
 #define F_NO_RR     (1u<<25)
diff --git a/src/forward.c b/src/forward.c
index d79cc56..7cd2d9a 100644
--- a/src/forward.c
+++ b/src/forward.c
@@ -545,7 +545,7 @@ static int forward_query(int udpfd, union mysockaddr *udpaddr,
 		}
 #ifdef HAVE_DNSSEC
 	      else
-		log_query_mysockaddr(F_NOEXTRA | F_DNSSEC | F_SERVER, daemon->namebuff, &srv->addr,
+		log_query_mysockaddr(F_NOEXTRA | F_NOERR | F_SERVER, daemon->namebuff, &srv->addr,
 				     (forward->flags & FREC_DNSKEY_QUERY) ? "dnssec-retry[DNSKEY]" : "dnssec-retry[DS]", 0);
 #endif
 
@@ -1050,7 +1050,7 @@ static void dnssec_validate(struct frec *forward, struct dns_header *header,
 #ifdef HAVE_DUMPFILE
 		  dump_packet_udp(DUMP_SEC_QUERY, (void *)header, (size_t)nn, NULL, &server->addr, fd);
 #endif
-		  log_query_mysockaddr(F_NOEXTRA | F_DNSSEC | F_SERVER, daemon->keyname, &server->addr,
+		  log_query_mysockaddr(F_NOEXTRA | F_NOERR | F_SERVER, daemon->keyname, &server->addr,
 				       STAT_ISEQUAL(status, STAT_NEED_KEY) ? "dnssec-query[DNSKEY]" : "dnssec-query[DS]", 0);
 		  return;
 		}
@@ -2059,7 +2059,7 @@ static int tcp_key_recurse(time_t now, int status, struct dns_header *header, si
       log_save = daemon->log_display_id;
       daemon->log_display_id = ++daemon->log_id;
       
-      log_query_mysockaddr(F_NOEXTRA | F_DNSSEC | F_SERVER, keyname, &server->addr,
+      log_query_mysockaddr(F_NOEXTRA | F_NOERR | F_SERVER, keyname, &server->addr,
 			    STAT_ISEQUAL(status, STAT_NEED_KEY) ? "dnssec-query[DNSKEY]" : "dnssec-query[DS]", 0);
             
       new_status = tcp_key_recurse(now, new_status, new_header, m, class, name, keyname, server, have_mark, mark, keycount);
-- 
2.42.0

